name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:9.6-alpine
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_notification_api
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 15s
          --health-retries 5
      redis:
        image: redis
        ports: ['6379:6379']
        options:
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.6.12
    - name: Build and run tests
      env:
        NOTIFY_ENVIRONMENT: 'development'
        FLASK_APP: 'application.py'
        SQLALCHEMY_DATABASE_URI: "postgresql://postgres:postgres@localhost:5432/test_notification_api"
      run: |
        pip3 install -r requirements_for_test.txt
        make generate-version-file
        flask db upgrade
        make test
  deploy_staging:
    needs: [test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
    steps:
      - uses: actions/checkout@v2
      - name: "Deploy staging"
        env:
          CONVOX_PASSWORD: ${{ secrets.CONVOX_PASSWORD }}
        run: |
          curl -L https://github.com/convox/convox/releases/latest/download/convox-linux -o /tmp/convox
          sudo mv /tmp/convox /usr/local/bin/convox
          chmod 755 /usr/local/bin/convox
          convox -v
          env CONVOX_HOST="console.convox.com" CONVOX_PASSWORD="$CONVOX_PASSWORD" convox deploy --app notifications-api-staging --rack bitzesty/castnotify
          env CONVOX_HOST="console.convox.com" CONVOX_PASSWORD="$CONVOX_PASSWORD" convox run api "flask db upgrade" --app notifications-api-staging --rack bitzesty/castnotify
  deploy_production:
      needs: [test]
      if: github.ref == 'refs/heads/production'
      runs-on: ubuntu-latest
      strategy:
        max-parallel: 1
      steps:
        - uses: actions/checkout@v2
        - name: "Deploy production"
          env:
            CONVOX_PASSWORD: ${{ secrets.CONVOX_PASSWORD }}
          run: |
            curl -L https://github.com/convox/convox/releases/latest/download/convox-linux -o /tmp/convox
            sudo mv /tmp/convox /usr/local/bin/convox
            chmod 755 /usr/local/bin/convox
            convox -v
            env CONVOX_HOST="console.convox.com" CONVOX_PASSWORD="$CONVOX_PASSWORD" convox deploy --app notifications-api-production --rack bitzesty/castnotify
            env CONVOX_HOST="console.convox.com" CONVOX_PASSWORD="$CONVOX_PASSWORD" convox run api "flask db upgrade" --app notifications-api-production --rack bitzesty/castnotify
